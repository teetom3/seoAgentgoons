// prisma/schema.prisma
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text // ✅ Changé pour MySQL
  access_token      String? @db.Text // ✅ Changé pour MySQL
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text // ✅ Changé pour MySQL
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId]) // ✅ CONTRAINTE MANQUANTE !
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  tokens        Int       @default(2)
  accounts      Account[]
  sessions      Session[]
  articles      Article[] //
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.LongText
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}